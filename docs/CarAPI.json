{
  "openapi": "3.0.3",
  "info": {
    "title": "Challenge Chapter 5 - Binar Car Management API",
    "description": "Ini adalah dokumentasi API Challenge chapter 5 mengenai Car Management API menggunakan swagger.io",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Bagian untuk membuat akun dan login"
    },
    {
      "name": "Cars",
      "description": "Bagian CRUD Car"
    }
  ],
  "paths": {
    "/register/admin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register admin oleh Superadmin",
        "description": "Ini adalah endpoint untuk menambahkan admin yang mana hanya boleh dilakukan oleh superadmin.",
        "requestBody": {
          "description": "Created Admin object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          },
          "401": {
            "description": "You unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register member/user",
        "description": "Ini adalah endpoint untuk register sebagai member",
        "requestBody": {
          "description": "Created Admin object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/memberRegister"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/memberRegister"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/memberRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          },
          "401": {
            "description": "You unauthorized"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login akun",
        "description": "Ini adalah endpoint untuk login sebagai superadmin, admin, maupun member.",
        "requestBody": {
          "description": "Created Admin object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/login"
                }
              }
            }
          },
          "401": {
            "description": "You unauthorized"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Who Am I",
        "description": "Ini adalah endpoint untuk melihat current user dari token yang dimiliki.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/me"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/me"
                }
              }
            }
          },
          "401": {
            "description": "You unauthorized"
          }
        }
      }
    },
    "/cars/create": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Add a new car to the dashboard",
        "description": "Add a new car to the dashboard",
        "operationId": "addCar",
        "requestBody": {
          "description": "Create a new car to the dashboard",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/create"
                }
              }
            }
          },
          "401": {
            "description": "If Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cars/{carId}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Find Car by ID",
        "description": "Returns a Car",
        "operationId": "getCarById",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/create"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "car not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Cars"
        ],
        "summary": "Updates a car in the dashboard with form data",
        "description": "Updates a car in the dashboard with form data",
        "operationId": "updatecarWithForm",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of car that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Price of car that needs to be updated",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Size of car that needs to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "image",
            "in": "query",
            "description": "Image of car that needs to be updated",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/update"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "If Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Delete a car",
        "description": "delete a car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "car id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted by 1."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid car value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cars": {
      "get": {
        "tags": [
          "Cars"
        ],
        "description": "To retrive the list of posts",
        "responses": {
          "200": {
            "description": "If data successfully retrived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "posts": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Toyota"
                              },
                              "price": {
                                "type": "integer",
                                "example": 100
                              },
                              "size": {
                                "type": "string",
                                "example": "Small"
                              },
                              "image": {
                                "type": "string",
                                "format": "binary",
                                "example": "http://res.cloudinary.com/dlf3pvbmi/image/upload/v1681927253/vy6vhtxjzwp0owsmsido.png"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2022-10-12T13:25:21.995Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2022-10-12T13:25:21.995Z"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "format": "int64",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Admin 1"
          },
          "email": {
            "type": "string",
            "example": "admin1@mail.com"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          }
        },
        "xml": {
          "name": "Register"
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Admin 1"
          },
          "email": {
            "type": "string",
            "example": "admin1@mail.com"
          },
          "encryptedpassword": {
            "type": "string",
            "example": "$2a$10$r.C4vVSBVAUOpJKGVU7CyO313TAwvHwUyXEiGIy9B59JcuZjOxw0C"
          },
          "userRole": {
            "type": "string",
            "example": "admin"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-09T02:05:12.515Z"
          },
          "updated": {
            "type": "string",
            "example": "2023-05-09T02:05:12.515Z"
          }
        },
        "xml": {
          "name": "Admin"
        }
      },
      "memberRegister": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "member 1"
          },
          "email": {
            "type": "string",
            "example": "member1@mail.com"
          },
          "password": {
            "type": "string",
            "example": "member123"
          }
        },
        "xml": {
          "name": "memberRegister"
        }
      },
      "Member": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "member 1"
          },
          "email": {
            "type": "string",
            "example": "member1@mail.com"
          },
          "encryptedpassword": {
            "type": "string",
            "example": "$2a$10$r.C4vVSBVAUOpJKGVU7CyO313TAwvHwUyXEiGIy9B59JcuZjOxw0C"
          },
          "userRole": {
            "type": "string",
            "example": "member"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-09T02:05:12.515Z"
          },
          "updated": {
            "type": "string",
            "example": "2023-05-09T02:05:12.515Z"
          }
        },
        "xml": {
          "name": "Member"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "member1@mail.com"
          },
          "password": {
            "type": "string",
            "example": "member123"
          }
        },
        "xml": {
          "name": "Login"
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "member 1"
          },
          "email": {
            "type": "string",
            "example": "member1@mail.com"
          },
          "userRole": {
            "type": "string",
            "example": "member"
          },
          "Token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlclJvbGUiOiJhZG1pbiIsImlhdCI6MTY4MzYwMzUwMH0.1v58XWp2ZFn7txFwijSre-y6FrzTeTqlT7N_yH-EhO8"
          }
        },
        "xml": {
          "name": "login"
        }
      },
      "me": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "member 1"
          },
          "email": {
            "type": "string",
            "example": "member1@mail.com"
          },
          "userRole": {
            "type": "string",
            "example": "member"
          }
        },
        "xml": {
          "name": "me"
        }
      },
      "Create": {
        "required": [
          "name",
          "price",
          "size",
          "image"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Toyota"
          },
          "price": {
            "type": "integer",
            "example": 100
          },
          "size": {
            "type": "string",
            "example": "Small"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "example": "http://res.cloudinary.com/dlf3pvbmi/image/upload/v1681927253/vy6vhtxjzwp0owsmsido.png"
          }
        },
        "xml": {
          "name": "Create"
        }
      },
      "create": {
        "required": [
          "name",
          "price",
          "size",
          "image"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Toyota"
          },
          "price": {
            "type": "integer",
            "example": 100
          },
          "size": {
            "type": "string",
            "example": "Small"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "example": "http://res.cloudinary.com/dlf3pvbmi/image/upload/v1681927253/vy6vhtxjzwp0owsmsido.png"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "example": null
          },
          "deletedBy": {
            "type": "integer",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-10T09:31:33.822Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-05-10T09:31:33.822Z"
          }
        },
        "xml": {
          "name": "create"
        }
      },
      "update": {
        "required": [
          "name",
          "price",
          "size",
          "image"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Toyota"
          },
          "price": {
            "type": "integer",
            "example": 100
          },
          "size": {
            "type": "string",
            "example": "Small"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "example": "http://res.cloudinary.com/dlf3pvbmi/image/upload/v1681927253/vy6vhtxjzwp0owsmsido.png"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "updatedBy": {
            "type": "integer",
            "example": 1
          },
          "deletedBy": {
            "type": "integer",
            "example": null
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-10T09:31:33.822Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-05-10T09:31:33.822Z"
          }
        },
        "xml": {
          "name": "update"
        }
      }
    },
    "requestBodies": {
      "Car": {
        "description": "Car object that needs to be added to the dashboard",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/create"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/create"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of User object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}